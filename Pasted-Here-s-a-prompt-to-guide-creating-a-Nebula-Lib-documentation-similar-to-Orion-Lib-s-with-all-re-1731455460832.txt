Here's a prompt to guide creating a **Nebula Lib** documentation similar to Orion Lib's, with all required elements in a single Lua file and mobile-friendly design:

---

**Prompt:**

"Develop a UI library for Roblox called **Nebula Lib** with all functionality contained within one Lua file, to support both PC and mobile platforms. Use the following documentation structure and include this example code style to help users easily implement and customize the library."

---

### Nebula Lib Documentation

This documentation is for the stable release of Nebula Lib.

---

### Booting the Library

```lua
local NebulaLib = loadstring(game:HttpGet(('https://path.to/nebula/source')))()
```

### Creating a Window

```lua
local Window = NebulaLib:CreateWindow({
    Name = "Nebula Interface",
    SaveConfig = true,
    ConfigFolder = "NebulaSettings",
    MobileDrag = true
})

--[[
Name = <string> - The name displayed on the UI.
SaveConfig = <bool> - Enables saving user preferences.
ConfigFolder = <string> - Folder for saving settings.
MobileDrag = <bool> - Allows drag functionality on mobile.
]]
```

### Creating a Tab

```lua
local Tab = Window:CreateTab({
    Name = "Main Tab",
    Icon = "rbxassetid://123456",
})

--[[
Name = <string> - The tab's name.
Icon = <string> - URL or asset ID for the tab icon.
]]
```

### Adding UI Elements

#### Buttons

```lua
Tab:AddButton({
    Name = "Click Me!",
    Callback = function()
        print("Button pressed!")
    end
})

--[[
Name = <string> - Button label.
Callback = <function> - Executes when clicked.
]]
```

#### Toggles

```lua
Tab:AddToggle({
    Name = "Enable Option",
    Default = false,
    Callback = function(Value)
        print("Toggle set to:", Value)
    end
})

--[[
Name = <string> - Label for toggle.
Default = <bool> - Initial value.
Callback = <function> - Runs when toggle is changed.
]]
```

#### Sliders

```lua
Tab:AddSlider({
    Name = "Volume",
    Min = 0,
    Max = 100,
    Default = 50,
    Callback = function(Value)
        print("Slider set to:", Value)
    end
})

--[[
Name = <string> - Label for the slider.
Min = <number> - Minimum value.
Max = <number> - Maximum value.
Default = <number> - Initial slider position.
Callback = <function> - Executes when slider value changes.
]]
```

#### Notifications

```lua
NebulaLib:ShowNotification({
    Title = "Welcome",
    Content = "Thanks for using Nebula Lib!",
    Time = 3
})

--[[
Title = <string> - Title of the notification.
Content = <string> - Main message text.
Time = <number> - Duration of notification.
]]
```

#### Dropdown Menus

```lua
Tab:AddDropdown({
    Name = "Choose an Option",
    Options = {"Option 1", "Option 2"},
    Callback = function(Value)
        print("Selected:", Value)
    end
})

--[[
Name = <string> - Dropdown label.
Options = <table> - Options in dropdown.
Callback = <function> - Executes on selection.
]]
```

---

### Finalizing and Destroying the Interface

To initialize:

```lua
NebulaLib:Init()
```

To destroy:

```lua
NebulaLib:Destroy()
```

---

This structure allows for flexibility in creating and interacting with UI elements on both PC and mobile devices, with a touch-friendly interface for mobile users.